[tool.poetry]
name = "cogment"
version = "1.3.0"
description = "Cogment python SDK"
authors = ["Artificial Intelligence Redefined <dev+cogment@ai-r.com>"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://cogment.ai"
repository = "https://github.com/cogment/cogment-py-sdk"
# Customized build.py to customize commands.
build="build.py"
# gitignored files need to be specifically included
include = [
  "CHANGELOG.md",
  "./cogment/version.py",
  "./cogment/api/*.proto",
  "./cogment/api/*.py"
]
exclude = [
  "./cogment/version.py.in"
]

[tool.poetry.dependencies]
python = "^3.7"
grpcio = ">=1.30, <1.39"
grpcio-reflection = ">=1.30, <1.39"
protobuf = "^3.7"
prometheus-client = "^0.8"
PyYAML = { version = "^5.4.1", optional = true }
grpcio-tools = { version = "1.38", optional = true }

[tool.poetry.extras]
generate = ["PyYAML", "grpcio-tools"]

[tool.poetry.dev-dependencies]
taskipy = "^1.4.0"
pycodestyle = "^2.6.0"
mypy = "^0.790"
pytest = "^6.1.1"
PyYAML = "^5.3.1"
pytest-dotenv = "^0.5.2"
pytest-asyncio = "^0.14.0"
pytest-timeout = "^1.4.2"
mock = "^4.0.3"

[tool.taskipy.tasks]
lint = "task lint_pycodestyle && task lint_mypy"
lint_pycodestyle = "pycodestyle --exclude=*pb2.py,*pb2_grpc.py cogment/"
lint_mypy = "mypy --config-file mypy.ini cogment/"
test = "pytest"

[tool.pytest.ini_options]
log_level = "DEBUG"
log_format = "%(asctime)s.%(msecs)03d %(levelname)s %(message)s"
log_date_format = "%H:%M:%S"
addopts = "-rfs"
junit_suite_name = "cogment_py_sdk_tests"
timeout = 15

[build-system]
requires = [
  "poetry-core>=1.0.0",
  "setuptools",
  "wheel",
  "pip"
]
build-backend = "poetry.core.masonry.api"
